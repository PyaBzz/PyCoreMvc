// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using myCoreMvc.App;

namespace myCoreMvc.Migrations
{
    [DbContext(typeof(EfCtx))]
    partial class DbCtxModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("myCoreMvc.Domain.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("Hash");

                    b.Property<string>("Name");

                    b.Property<string>("Role");

                    b.Property<byte[]>("Salt");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("myCoreMvc.Domain.WorkItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("Priority");

                    b.Property<string>("Reference");

                    b.Property<Guid?>("WorkPlanId");

                    b.HasKey("Id");

                    b.HasIndex("WorkPlanId");

                    b.ToTable("WorkItems");
                });

            modelBuilder.Entity("myCoreMvc.Domain.WorkPlan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("WorkPlans");
                });

            modelBuilder.Entity("myCoreMvc.Domain.WorkItem", b =>
                {
                    b.HasOne("myCoreMvc.Domain.WorkPlan", "WorkPlan")
                        .WithMany("WorkItems")
                        .HasForeignKey("WorkPlanId");
                });
#pragma warning restore 612, 618
        }
    }
}
